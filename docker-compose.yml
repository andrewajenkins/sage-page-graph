version: '3.7'

services:
  db:
    image: postgres:13
    restart: always
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network

  redis:
    image: redis:alpine
    restart: always
    networks:
      - app-network

  backend:
    build:
      context: .
      dockerfile: tools/docker/backend/Dockerfile
    # command: gunicorn --reload --workers 3 --bind 0.0.0.0:8000 graph.wsgi:application
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./backend:/usr/src/app
      - ./backend/staticfiles:/app/staticfiles
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
    environment:
      - DB_NAME=postgres
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_HOST=db
    networks:
      - app-network
    env_file:
      - backend/.env  # Include your .env file

  frontend:
    build:
      context: .
      dockerfile: tools/docker/frontend/Dockerfile
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - app-network
 
  nginx:
    image: nginx:alpine
    volumes:
      - ./nginx-backend.conf:/etc/nginx/nginx.conf
      - ./backend/staticfiles:/usr/share/nginx/html/static
    ports:
      - "8080:80"
    depends_on:
      - backend
      - frontend
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
